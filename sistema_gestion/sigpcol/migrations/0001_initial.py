# Generated by Django 4.2.15 on 2024-08-27 18:33

from decimal import Decimal
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, unique=True)),
                ('fecha_inicio', models.DateField()),
                ('fecha_final', models.DateField()),
                ('tarifa_mensual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descuento_pago_anticipado', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tasa_moneda', models.DecimalField(decimal_places=4, max_digits=10)),
                ('numero_pagos', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='Descuento general', max_length=100)),
                ('descripcion', models.TextField(default='Sin descripción')),
                ('porcentaje', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('seccion', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('monto_bs', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('monto_usd', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('abono_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('fecha_pago', models.DateTimeField()),
                ('fecha_reportada', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('APROBADO', 'Aprobado'), ('RECHAZADO', 'Rechazado')], default='PENDIENTE', max_length=10)),
                ('imagen_pago', models.ImageField(blank=True, null=True, upload_to='imagenes_pagos/')),
                ('año_académico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sigpcol.academicyear')),
            ],
        ),
        migrations.CreateModel(
            name='Representative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('usuario', models.CharField(max_length=100)),
                ('telefono_principal', models.CharField(max_length=20)),
                ('telefono_secundario', models.CharField(blank=True, max_length=20, null=True)),
                ('direccion', models.TextField()),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('informacion_facturacion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('descuento_personalizado', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('anio_academico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sigpcol.academicyear')),
                ('grado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sigpcol.grade')),
                ('representante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudiantes', to='sigpcol.representative')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_generado', models.DateTimeField(auto_now_add=True)),
                ('tipo_reporte', models.CharField(default='Default Type', max_length=100)),
                ('datos', models.JSONField()),
                ('año_académico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sigpcol.academicyear')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_abono', models.DateField()),
                ('monto_abono', models.DecimalField(decimal_places=2, max_digits=10)),
                ('recibo_imagen', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/media/payments/'), upload_to='receipts/')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sigpcol.payment')),
            ],
        ),
        migrations.AddField(
            model_name='payment',
            name='estudiante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sigpcol.student'),
        ),
        migrations.AddField(
            model_name='payment',
            name='representante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sigpcol.representative'),
        ),
        migrations.CreateModel(
            name='BillingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('J', 'Jurídica'), ('N', 'Natural')], max_length=1)),
                ('informacion', models.TextField()),
                ('representative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing_infos', to='sigpcol.representative')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('numero_de_telefono', models.CharField(blank=True, max_length=15)),
                ('factura_tipo', models.CharField(blank=True, choices=[('J', 'Jurídica'), ('N', 'Natural')], max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sigpcol.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
